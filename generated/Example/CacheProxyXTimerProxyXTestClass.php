<?php

//Auto-generated by Weaver - https://github.com/Danack/Weaver
//
//Do not be surprised if any changes to this file are over-written.

namespace Example;

class CacheProxyXTimerProxyXTestClass extends \Example\TimerProxyXTestClass
{

    /**
     * @var \Example\TestClass
     */
    private $cache = null;

    public function executeQuery($params)
    {
        $cacheKey = $this->getCacheKey($this->queryString);
                       $cachedValue = $this->cache->get($cacheKey);
                       
                       if ($cachedValue) {
                           echo "Result is in cache.\n";
                           return $cachedValue;
                       }
                       
        $result = parent::executeQuery($params);
        echo "Result was not in cache\n";
                            $this->cache->put($cacheKey, $result);

        return $result;
    }

    public function getCacheKey()
    {
        $args = func_get_args();

                $cacheKey = '';

                foreach($args as $arg) {
                    if (is_array($arg)) {
                        foreach ($arg as $argElement) {
                            $cacheKey = hash("sha256", $cacheKey.$argElement);
                        }
                    }
                    else {
                        $cacheKey = hash("sha256", $cacheKey.$arg);
                    }
                }

                return $cacheKey;
    }

    public function __construct($queryString, \Intahwebz\Timer $timer, \Intahwebz\ObjectCache $cache)
    {
        parent::__construct($queryString, $timer);
                $this->cache = $cache;
    }


}
