<?php

//Auto-generated by Weaver - https://github.com/Danack/Weaver
//
//Do not be surprised if any changes to this file are over-written.
namespace Example;

class LazyProxyXTestClass implements TestInterface
{

    private $lazyInstance = null;

    protected $queryString = null;

    public function anotherFunction($someParameter)
    {
        $this->init();
        $result = $this->lazyInstance->anotherFunction($someParameter);
        return $result;
    }

    public function executeQuery($params)
    {
        $this->init();
        $result = $this->lazyInstance->executeQuery($params);
        return $result;
    }

    public function noReturn()
    {
        $this->init();
        $result = $this->lazyInstance->noReturn();
        return $result;
    }

    public function __construct($queryString, SomeFactory $someFactory)
    {
        $this->queryString = $queryString;
    }

    public function init()
    {
        if ($this->lazyInstance == null) {
                    $this->lazyInstance = $this->someFactory->create($this->queryString);
        }
    }


}
